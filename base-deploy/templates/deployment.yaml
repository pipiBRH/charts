apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app }}-deployment
  labels:
    partner: {{ .Values.partner }}
    app: {{ .Values.app }}
    env: {{ .Values.labels.env }}
    component: app
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      partner: {{ .Values.partner }}
      app: {{ .Values.app }}
      env: {{ .Values.labels.env }}
      component: app
  strategy:
{{ toYaml .Values.updateStrategy  | indent 4}}
  minReadySeconds: {{ .Values.minReadySeconds }}
  template:
    metadata:
      labels:
        partner: {{ .Values.partner }}
        app: {{ .Values.app }}
        env: {{ .Values.labels.env }}
        component: app
    spec:
      securityContext:
        fsGroup: 2000
      {{- if or .Values.affinty.antiAffinity .Values.affinty.nodeAffinity }}
      affinity:
      {{- end }}
      {{- if eq .Values.affinty.antiAffinity "hard" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - nginx-ingress
                topologyKey: "failure-domain.beta.kubernetes.io/zone"
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Values.app }}
      {{- else if eq .Values.affinty.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Values.app }}
      {{- end }}
      {{- with .Values.affinty.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - image: {{ .Values.appImage.repository }}:{{ .Values.imageTag }}
{{ toYaml .Values.appImage.config | indent 10}}
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 9000
              name: fe-php
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: fe-php
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 6
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: fe-php
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 6
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 82
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","sleep 10"]
        - image: {{ .Values.nginxImage.repository }}:{{ .Values.imageTag }}
{{ toYaml .Values.nginxImage.config | indent 10}}
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: fe-nginx
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 6
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: fe-nginx
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 6
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
        - image: hipages/php-fpm_exporter
          name: fpm-exporter
          env:
            - name: PHP_FPM_SCRAPE_URI
              value: tcp://127.0.0.1:9000/php_fpm_status
            - name: PHP_FPM_FIX_PROCESS_COUNT
              value: "true"
          ports:
            - containerPort: 9253
          resources:
            limits:
              cpu: 500m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
{{ if .Values.stunnelImage }}
        - image: {{ .Values.stunnelImage.repository }}:{{ .Values.stunnelImage.tag }}
{{ toYaml .Values.stunnelImage.config | indent 10}}
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: redis
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 6
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: redis
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 6
{{ end }}
      volumes:
{{ toYaml .Values.volumes | indent 8}}
